# using leveldb on akka-persistence
akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.journal.leveldb.dir = "target/example/journal"

# local snapshot store
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "target/example/snapshots"

//extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

akka {
  actor {
    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
//      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    warn-about-java-serializer-usage = true
    serialization-bindings {
      "net.petitviolet.ex.persistence.practice.AppendCommand" = kryo
      "net.petitviolet.ex.persistence.practice.MyState" = kryo
//      "java.io.Serializable" = none
      "net.petitviolet.ex.persistence.task.actor.Register" = kryo
      "net.petitviolet.ex.persistence.task.actor.Archive" = kryo
      "net.petitviolet.ex.persistence.task.actor.Complete" = kryo
      "net.petitviolet.ex.persistence.task.actor.Undo" = kryo
      "net.petitviolet.ex.persistence.task.actor.State" = kryo
    }
    kryo {
      type = "graph"
      idstrategy = "default"
    }
  }
}

http {
  host = "0.0.0.0"
  port = 9000
}

mysql-local = {
  url = "jdbc:mysql://localhost/akka-db"
  driver = com.mysql.jdbc.Driver
  user = ""
  user = ${?MYSQL_USER}
  password = ""
  password = ${?MYSQL_PASSWORD}
  connectionPool = disabled
  keepAliveConnection = true
}